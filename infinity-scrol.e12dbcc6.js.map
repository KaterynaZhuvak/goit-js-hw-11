{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,uCAMA,MACMC,EADOC,SAASC,cAAc,QACjBC,SAASC,YACtBC,EAAOJ,SAASC,cAAc,YAC9BI,EAASL,SAASC,cAAc,cAChCK,EAASN,SAASC,cAAc,aACtC,IAAIM,EAAc,EAOlB,SAASC,IACP,MAAQC,OAAQC,GAAeV,SAC5BC,cAAc,YACdU,kBAAkBC,wBAErBC,OAAOC,SAAS,CACdC,IAAkB,EAAbL,EACLM,SAAU,U,CAUdC,eAAeC,EAAiBC,GAC9B,IACE,MAAMC,QAAiB,EAAAvB,EAAAwB,UAASF,EAAOZ,GACvCe,EAAAC,GAASC,OAAOC,QACd,oBAAoBL,EAASM,uBAAuBP,MAEtD,IAAIQ,EAAgC,GAAdpB,EACtBH,EAAKwB,mBAAmB,cAAc,EAAAC,EAAAC,cAAaV,EAASW,OAC5DvB,IACAwB,EAASC,QAAQ3B,GACbc,EAASM,UAAYC,GACvBL,EAAAC,GAASC,OAAOU,KAAK,iBAAiBd,EAASM,qB,CAEjD,MAAOS,GACPb,EAAAC,GAASC,OAAOY,QAAQ,+B,EAI5B/B,EAAOgC,iBAAiB,SAASC,IAC/BA,EAAMC,iBACN,MAAMC,EAAqCpC,EAzBhBqC,iBAAiB,eAE5BC,OAAS,EAwBzB,GAAoB,KAAhB3C,EAAM4C,MACR,OAAOrB,EAAAC,GAASC,OAAOoB,QAAQ,+BAGjC,GAAIJ,EAAiB,CACnBpC,EAAKyC,UAAY,GAEjB3B,EADqBnB,EAAM4C,M,KAEtB,CAELzB,EADqBnB,EAAM4C,M,KA8B/B,IAAIX,EAAW,IAAIc,sBAzBnB,SAAgBC,EAASC,GACvBD,EAAQE,SAAQhC,MAAMiC,IACpB,GAAIA,EAAMC,eAAgB,CACxB,MAAMC,EAAerD,EAAM4C,MAC3BpC,GAAe,EACf,IAAIoB,EAAgC,GAAdpB,EACtB,IACE,MAAMa,QAAiB,EAAAvB,EAAAwB,UAAS+B,EAAc7C,GAC9C,GAAIa,EAASM,UAAYC,EAGvB,OAFAqB,EAASK,UAAU/C,GAEZgB,EAAAC,GAASC,OAAOU,KACrB,8DAGJ9B,EAAKwB,mBAAmB,aAAa,EAAAC,EAAAC,cAAaV,EAASW,OAC3DvB,G,CACA,MAAO2B,GACPmB,QAAQC,UAAUC,IAAI,mBACtBlC,EAAAC,GAASC,OAAOY,QAAQ,+B,QA7ElB,CACZqB,KAAM,KACNC,WAAY,QACZC,UAAW,IAkFI,IAAIrC,EAAAsC,GAAJ,CAAmB,gBAAiB,CACnDC,eAAgB,IAChBC,gBAAiB,SACjBC,aAAc","sources":["src/js/infiniti.js"],"sourcesContent":["import { getPhoto } from './api';\nimport { createMarkup } from './markup';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport Notiflix from 'notiflix';\n\nconst form = document.querySelector('form');\nconst input = form.elements.searchQuery;\nconst list = document.querySelector('.gallery');\nconst button = document.querySelector('.submitBtn');\nconst target = document.querySelector('.js-guard');\nlet currentPage = 1;\nlet options = {\n  root: null,\n  rootMargin: '500px',\n  threshold: 1.0,\n};\n\nfunction smoothScrol() {\n  const { height: cardHeight } = document\n    .querySelector('.gallery')\n    .firstElementChild.getBoundingClientRect();\n\n  window.scrollBy({\n    top: cardHeight * 2,\n    behavior: 'smooth',\n  });\n}\n\nfunction arePicturesPresent(container) {\n  const pictures = container.querySelectorAll('.photo-card');\n\n  return pictures.length > 0;\n}\n\nasync function getGeneralMarkup(input) {\n  try {\n    const pictures = await getPhoto(input, currentPage);\n    Notiflix.Notify.success(\n      `Hooray! We found ${pictures.totalHits} images of ${input}!`\n    );\n    let valueOfPictures = currentPage * 40;\n    list.insertAdjacentHTML('afterbegin', createMarkup(pictures.hits));\n    smoothScrol();\n    observer.observe(target);\n    if (pictures.totalHits < valueOfPictures) {\n      Notiflix.Notify.info(`We found only ${pictures.totalHits} pictures`);\n    }\n  } catch (error) {\n    Notiflix.Notify.failure('Sorry, something went wrong!');\n  }\n}\n\nbutton.addEventListener('click', event => {\n  event.preventDefault();\n  const picturesPresent = arePicturesPresent(list);\n  if (input.value === '') {\n    return Notiflix.Notify.warning('Please put down correct tag');\n  }\n\n  if (picturesPresent) {\n    list.innerHTML = '';\n    const currentInput = input.value;\n    getGeneralMarkup(currentInput);\n  } else {\n    const currentInput = input.value;\n    getGeneralMarkup(currentInput);\n  }\n});\n\nfunction onLoad(entries, observer) {\n  entries.forEach(async entry => {\n    if (entry.isIntersecting) {\n      const currentInput = input.value;\n      currentPage += 1;\n      let valueOfPictures = currentPage * 40;\n      try {\n        const pictures = await getPhoto(currentInput, currentPage);\n        if (pictures.totalHits < valueOfPictures) {\n          observer.unobserve(target);\n\n          return Notiflix.Notify.info(\n            \"We're sorry, but you've reached the end of search results.\"\n          );\n        }\n        list.insertAdjacentHTML('beforeend', createMarkup(pictures.hits));\n        smoothScrol();\n      } catch (error) {\n        loadBtn.classList.add('visually-hidden');\n        Notiflix.Notify.failure('Sorry, something went wrong!');\n      }\n    }\n  });\n}\n\nlet observer = new IntersectionObserver(onLoad, options);\n\nconst lightbox = new SimpleLightbox('.photo-card a', {\n  animationSpeed: 250,\n  captionPosition: 'bottom',\n  captionsData: 'alt',\n});\n"],"names":["$7rYDH","parcelRequire","$d974ac970b8ca2b1$var$input","document","querySelector","elements","searchQuery","$d974ac970b8ca2b1$var$list","$d974ac970b8ca2b1$var$button","$d974ac970b8ca2b1$var$target","$d974ac970b8ca2b1$var$currentPage","$d974ac970b8ca2b1$var$smoothScrol","height","cardHeight","firstElementChild","getBoundingClientRect","window","scrollBy","top","behavior","async","$d974ac970b8ca2b1$var$getGeneralMarkup","input1","pictures","getPhoto","$parcel$interopDefault","$7Y9D8","Notify","success","totalHits","valueOfPictures","insertAdjacentHTML","$3huUq","createMarkup","hits","$d974ac970b8ca2b1$var$observer","observe","info","error","failure","addEventListener","event","preventDefault","picturesPresent","querySelectorAll","length","value","warning","innerHTML","IntersectionObserver","entries","observer1","forEach","entry","isIntersecting","currentInput","unobserve","loadBtn","classList","add","root","rootMargin","threshold","$fZKcF","animationSpeed","captionPosition","captionsData"],"version":3,"file":"infinity-scrol.e12dbcc6.js.map"}