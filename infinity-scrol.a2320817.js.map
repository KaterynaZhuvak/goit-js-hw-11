{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,iEAMMC,EAAOC,SAASC,cAAc,QAC9BC,EAAQH,EAAKI,SAASC,YACtBC,EAAOL,SAASC,cAAc,YAE9BK,GADSN,SAASC,cAAc,cACvBD,SAASC,cAAc,cAClCM,EAAc,EAOZC,EAAW,IAAIC,EAAAC,GAAJ,CAAmB,gBAAiB,CACnDC,eAAgB,IAChBC,aAAc,QA+BhB,SAASC,EAAqBC,GAC5B,IAAMC,EAAqCV,EAYhBW,iBAAiB,eAE5BC,OAAS,EAbzB,GAAc,KAAVH,GAAgBA,EAAMI,SAAS,KAEjC,OADAb,EAAKc,UAAY,GACVV,EAAAW,GAASC,OAAOC,QACrB,mDAGyBP,GAlB3BV,EAAKc,UAAY,GACjBI,EAASC,UAAUlB,GAEnBmB,EADqBvB,EAAMwB,QAI3BD,EADqBvB,EAAMwB,M,UAuBhBD,EAAiBE,G,OAAjBC,EAAgBC,MAAAC,KAAAC,U,UAAhBH,I,OAAAA,EAAfnB,EAAAZ,EAAA,CAAAY,EAAAuB,GAAAC,MAAA,SAAAC,EAAgCP,G,IAGtBQ,E,kFADN5B,EAAc,E,UACS,EAAA6B,EAAAC,UAASV,EAAOpB,G,OAAjC4B,EAAQG,EAAAC,KACd9B,EAAAW,GAASC,OAAOmB,QACd,oBAAoDC,OAAhCN,EAASO,UAAU,eAAmBD,OAANd,EAAM,MAE5DtB,EAAKsC,mBAAmB,cAAc,EAAAC,EAAAC,cAAaV,EAASW,OAC5DtC,EAASuC,UACTxB,EAASyB,QAAQ1C,G,kDAEjBG,EAAAW,GAASC,OAAO4B,QAAQ,gC,2DAXGpB,MAAAC,KAAAC,U,CAe/BhC,EAAKmD,iBAAiB,UAAU,SAAAC,GAC9BA,EAAMC,iBACNvC,EAAqBX,EAAMwB,M,IA2B7B,IAAIH,EAAW,IAAI8B,sBAxBnB,SAAgBC,EAASC,GACR,I,EAAfD,EAAQE,S,EAAQ/C,EAAAZ,EAAA,CAAAY,EAAAuB,GAAAC,MAAA,SAAAC,EAAMuB,G,IAEZC,EAEFC,EAEIxB,E,sEALNsB,EAAMG,eAAc,C,uBAChBF,EAAexD,EAAMwB,MAEvBiC,EAAgC,IADpCpD,GAAe,G,mBAGU,EAAA6B,EAAAC,UAASqB,EAAcnD,G,UAAxC4B,EAAQG,EAAAC,KACdlC,EAAKsC,mBAAmB,aAAa,EAAAC,EAAAC,cAAaV,EAASW,OAC3DtC,EAASuC,UA1EPc,WAAuB7D,SAC5BC,cAAc,YACd6D,kBAAkBC,wBAFbC,OAIRC,OAAOC,SAAS,CACdC,IAAkB,EAAbN,EACLO,SAAU,aAsEFT,EAAkBxB,EAASO,UAAY,IAAE,C,uBAC3Ca,EAAS/B,UAAUlB,G,kBACZG,EAAAW,GAASC,OAAOgD,KACrB,+D,0DAIJ5D,EAAAW,GAASC,OAAO4B,QAAQ,gC,kCApFhC,IACUY,C,iCAkEcJ,G,oCA9EV,CACZa,KAAM,KACNC,WAAY,QACZC,UAAW,G","sources":["src/js/infiniti.js"],"sourcesContent":["import { getPhoto } from './api';\nimport { createMarkup } from './markup';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport Notiflix from 'notiflix';\n\nconst form = document.querySelector('form');\nconst input = form.elements.searchQuery;\nconst list = document.querySelector('.gallery');\nconst button = document.querySelector('.submitBtn');\nconst target = document.querySelector('.js-guard');\nlet currentPage = 1;\nlet options = {\n  root: null,\n  rootMargin: '500px',\n  threshold: 1.0,\n};\n\nconst lightbox = new SimpleLightbox('.photo-card a', {\n  animationSpeed: 250,\n  captionsData: 'alt',\n});\n\nfunction smoothScrol() {\n  const { height: cardHeight } = document\n    .querySelector('.gallery')\n    .firstElementChild.getBoundingClientRect();\n\n  window.scrollBy({\n    top: cardHeight * 2,\n    behavior: 'smooth',\n  });\n}\n\nfunction arePicturesPresent(container) {\n  const pictures = container.querySelectorAll('.photo-card');\n  return pictures.length > 0;\n}\n\nfunction buildMarkupAndCheckGallery(value) {\n  if (value) {\n    list.innerHTML = '';\n    observer.unobserve(target);\n    const currentInput = input.value;\n    getGeneralMarkup(currentInput);\n  } else {\n    const currentInput = input.value;\n    getGeneralMarkup(currentInput);\n  }\n}\n\nfunction checkMarkupForSpaces(input) {\n  const picturesPresent = arePicturesPresent(list);\n  if (input === '' || input.includes(' ')) {\n    list.innerHTML = '';\n    return Notiflix.Notify.warning(\n      'Please put down correct tag or eliminate spaces'\n    );\n  } else {\n    buildMarkupAndCheckGallery(picturesPresent);\n  }\n}\n\nfunction arePicturesPresent(container) {\n  const pictures = container.querySelectorAll('.photo-card');\n\n  return pictures.length > 0;\n}\n\nasync function getGeneralMarkup(input) {\n  try {\n    currentPage = 1;\n    const pictures = await getPhoto(input, currentPage);\n    Notiflix.Notify.success(\n      `Hooray! We found ${pictures.totalHits} images of ${input}!`\n    );\n    list.insertAdjacentHTML('afterbegin', createMarkup(pictures.hits));\n    lightbox.refresh();\n    observer.observe(target);\n  } catch (error) {\n    Notiflix.Notify.failure('Sorry, something went wrong!');\n  }\n}\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  checkMarkupForSpaces(input.value);\n});\n\nfunction onLoad(entries, observer) {\n  entries.forEach(async entry => {\n    if (entry.isIntersecting) {\n      const currentInput = input.value;\n      currentPage += 1;\n      let valueOfPictures = currentPage * 40;\n      try {\n        const pictures = await getPhoto(currentInput, currentPage);\n        list.insertAdjacentHTML('beforeend', createMarkup(pictures.hits));\n        lightbox.refresh();\n        smoothScrol();\n        if (valueOfPictures % pictures.totalHits < 40) {\n          observer.unobserve(target);\n          return Notiflix.Notify.info(\n            \"We're sorry, but you've reached the end of search results.\"\n          );\n        }\n      } catch (error) {\n        Notiflix.Notify.failure('Sorry, something went wrong!');\n      }\n    }\n  });\n}\n\nlet observer = new IntersectionObserver(onLoad, options);\n"],"names":["$bpxeT","parcelRequire","$234218a4ae9f7e1a$var$form","document","querySelector","$234218a4ae9f7e1a$var$input","elements","searchQuery","$234218a4ae9f7e1a$var$list","$234218a4ae9f7e1a$var$target","$234218a4ae9f7e1a$var$currentPage","$234218a4ae9f7e1a$var$lightbox","$parcel$interopDefault","$5IjG7","animationSpeed","captionsData","$234218a4ae9f7e1a$var$checkMarkupForSpaces","input1","picturesPresent","querySelectorAll","length","includes","innerHTML","$6JpON","Notify","warning","$234218a4ae9f7e1a$var$observer","unobserve","$234218a4ae9f7e1a$var$getGeneralMarkup","value","input2","$234218a4ae9f7e1a$var$_getGeneralMarkup","apply","this","arguments","$2TvXO","mark","_callee","pictures","$b7ONl","getPhoto","_ctx","sent","success","concat","totalHits","insertAdjacentHTML","$1KhuP","createMarkup","hits","refresh","observe","failure","addEventListener","event","preventDefault","IntersectionObserver","entries","observer1","forEach","entry","currentInput","valueOfPictures","isIntersecting","cardHeight","firstElementChild","getBoundingClientRect","height","window","scrollBy","top","behavior","info","root","rootMargin","threshold"],"version":3,"file":"infinity-scrol.a2320817.js.map"}