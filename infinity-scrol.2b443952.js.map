{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,uCAMA,MACMC,EADOC,SAASC,cAAc,QACjBC,SAASC,YACtBC,EAAOJ,SAASC,cAAc,YAC9BI,EAASL,SAASC,cAAc,cAChCK,EAASN,SAASC,cAAc,aACtC,IAAIM,EAAc,EAOlB,SAASC,IACP,MAAQC,OAAQC,GAAeV,SAC5BC,cAAc,YACdU,kBAAkBC,wBAErBC,OAAOC,SAAS,CACdC,IAAkB,EAAbL,EACLM,SAAU,U,CAoBd,SAASC,EAAqBC,GAC5B,MAAMC,EAAqCf,EAShBgB,iBAAiB,eAE5BC,OAAS,EAVzB,GAAc,KAAVH,GAAgBA,EAAMI,SAAS,KACjC,OAAOC,EAAAC,GAASC,OAAOC,QAAQ,mDAEJP,GAd3Bf,EAAKuB,UAAY,GAEjBC,EADqB7B,EAAM8B,QAI3BD,EADqB7B,EAAM8B,M,CAoB/BC,eAAeF,EAAiBG,GAC9B,IACE,MAAMC,QAAiB,EAAAnC,EAAAoC,UAASF,EAAOxB,GACvCgB,EAAAC,GAASC,OAAOS,QACd,oBAAoBF,EAASG,uBAAuBJ,MAEtD,IAAIK,EAAgC,GAAd7B,EACtBH,EAAKiC,mBAAmB,cAAc,EAAAC,EAAAC,cAAaP,EAASQ,OAC5DhC,IACAiC,EAASC,QAAQpC,GACb0B,EAASG,UAAYC,GACvBb,EAAAC,GAASC,OAAOkB,KAAK,iBAAiBX,EAASG,qB,CAEjD,MAAOS,GACPrB,EAAAC,GAASC,OAAOoB,QAAQ,+B,EAI5BxC,EAAOyC,iBAAiB,SAASC,IAC/BA,EAAMC,iBACN/B,EAAqBlB,EAAM8B,MAAM,IA4BnC,IAAIY,EAAW,IAAIQ,sBAzBnB,SAAgBC,EAASC,GACvBD,EAAQE,SAAQtB,MAAMuB,IACpB,GAAIA,EAAMC,eAAgB,CACxB,MAAMC,EAAexD,EAAM8B,MAC3BtB,GAAe,EACf,IAAI6B,EAAgC,GAAd7B,EACtB,IACE,MAAMyB,QAAiB,EAAAnC,EAAAoC,UAASsB,EAAchD,GAC9C,GAAIyB,EAASG,UAAYC,EAGvB,OAFAe,EAASK,UAAUlD,GAEZiB,EAAAC,GAASC,OAAOkB,KACrB,8DAGJvC,EAAKiC,mBAAmB,aAAa,EAAAC,EAAAC,cAAaP,EAASQ,OAC3DhC,G,CACA,MAAOoC,GACPa,QAAQC,UAAUC,IAAI,mBACtBpC,EAAAC,GAASC,OAAOoB,QAAQ,+B,QA1FlB,CACZe,KAAM,KACNC,WAAY,QACZC,UAAW,IA+FI,IAAIvC,EAAAwC,GAAJ,CAAmB,gBAAiB,CACnDC,eAAgB,IAChBC,gBAAiB,SACjBC,aAAc","sources":["src/js/infiniti.js"],"sourcesContent":["import { getPhoto } from './api';\nimport { createMarkup } from './markup';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport Notiflix from 'notiflix';\n\nconst form = document.querySelector('form');\nconst input = form.elements.searchQuery;\nconst list = document.querySelector('.gallery');\nconst button = document.querySelector('.submitBtn');\nconst target = document.querySelector('.js-guard');\nlet currentPage = 1;\nlet options = {\n  root: null,\n  rootMargin: '500px',\n  threshold: 1.0,\n};\n\nfunction smoothScrol() {\n  const { height: cardHeight } = document\n    .querySelector('.gallery')\n    .firstElementChild.getBoundingClientRect();\n\n  window.scrollBy({\n    top: cardHeight * 2,\n    behavior: 'smooth',\n  });\n}\n\nfunction arePicturesPresent(container) {\n  const pictures = container.querySelectorAll('.photo-card');\n  return pictures.length > 0;\n}\n\nfunction buildMarkupAndCheckGallery(value) {\n  if (value) {\n    list.innerHTML = '';\n    const currentInput = input.value;\n    getGeneralMarkup(currentInput);\n  } else {\n    const currentInput = input.value;\n    getGeneralMarkup(currentInput);\n  }\n}\n\nfunction checkMarkupForSpaces(input) {\n  const picturesPresent = arePicturesPresent(list);\n  if (input === '' || input.includes(' ')) {\n    return Notiflix.Notify.warning('Please put down correct tag or eliminate spaces');\n  } else {\n    buildMarkupAndCheckGallery(picturesPresent)\n  }\n}\n\nfunction arePicturesPresent(container) {\n  const pictures = container.querySelectorAll('.photo-card');\n\n  return pictures.length > 0;\n}\n\nasync function getGeneralMarkup(input) {\n  try {\n    const pictures = await getPhoto(input, currentPage);\n    Notiflix.Notify.success(\n      `Hooray! We found ${pictures.totalHits} images of ${input}!`\n    );\n    let valueOfPictures = currentPage * 40;\n    list.insertAdjacentHTML('afterbegin', createMarkup(pictures.hits));\n    smoothScrol();\n    observer.observe(target);\n    if (pictures.totalHits < valueOfPictures) {\n      Notiflix.Notify.info(`We found only ${pictures.totalHits} pictures`);\n    }\n  } catch (error) {\n    Notiflix.Notify.failure('Sorry, something went wrong!');\n  }\n}\n\nbutton.addEventListener('click', event => {\n  event.preventDefault();\n  checkMarkupForSpaces(input.value);\n});\n\nfunction onLoad(entries, observer) {\n  entries.forEach(async entry => {\n    if (entry.isIntersecting) {\n      const currentInput = input.value;\n      currentPage += 1;\n      let valueOfPictures = currentPage * 40;\n      try {\n        const pictures = await getPhoto(currentInput, currentPage);\n        if (pictures.totalHits < valueOfPictures) {\n          observer.unobserve(target);\n\n          return Notiflix.Notify.info(\n            \"We're sorry, but you've reached the end of search results.\"\n          );\n        }\n        list.insertAdjacentHTML('beforeend', createMarkup(pictures.hits));\n        smoothScrol();\n      } catch (error) {\n        loadBtn.classList.add('visually-hidden');\n        Notiflix.Notify.failure('Sorry, something went wrong!');\n      }\n    }\n  });\n}\n\nlet observer = new IntersectionObserver(onLoad, options);\n\nconst lightbox = new SimpleLightbox('.photo-card a', {\n  animationSpeed: 250,\n  captionPosition: 'bottom',\n  captionsData: 'alt',\n});\n"],"names":["$7rYDH","parcelRequire","$d974ac970b8ca2b1$var$input","document","querySelector","elements","searchQuery","$d974ac970b8ca2b1$var$list","$d974ac970b8ca2b1$var$button","$d974ac970b8ca2b1$var$target","$d974ac970b8ca2b1$var$currentPage","$d974ac970b8ca2b1$var$smoothScrol","height","cardHeight","firstElementChild","getBoundingClientRect","window","scrollBy","top","behavior","$d974ac970b8ca2b1$var$checkMarkupForSpaces","input1","picturesPresent","querySelectorAll","length","includes","$parcel$interopDefault","$7Y9D8","Notify","warning","innerHTML","$d974ac970b8ca2b1$var$getGeneralMarkup","value","async","input2","pictures","getPhoto","success","totalHits","valueOfPictures","insertAdjacentHTML","$3huUq","createMarkup","hits","$d974ac970b8ca2b1$var$observer","observe","info","error","failure","addEventListener","event","preventDefault","IntersectionObserver","entries","observer1","forEach","entry","isIntersecting","currentInput","unobserve","loadBtn","classList","add","root","rootMargin","threshold","$fZKcF","animationSpeed","captionPosition","captionsData"],"version":3,"file":"infinity-scrol.2b443952.js.map"}