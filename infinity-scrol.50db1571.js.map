{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,uCAMA,MAAMC,EAAOC,SAASC,cAAc,QAC9BC,EAAQH,EAAKI,SAASC,YACtBC,EAAOL,SAASC,cAAc,YAE9BK,GADSN,SAASC,cAAc,cACvBD,SAASC,cAAc,cACtC,IAAIM,EAAc,EAOlB,MAAMC,EAAW,IAAIC,EAAAC,GAAJ,CAAmB,gBAAiB,CACnDC,eAAgB,IAChBC,aAAc,QA+BhB,SAASC,EAAqBC,GAC5B,MAAMC,EAAqCV,EAWhBW,iBAAiB,eAE5BC,OAAS,EAZzB,GAAc,KAAVH,GAAgBA,EAAMI,SAAS,KACjC,OAAOT,EAAAU,GAASC,OAAOC,QACrB,mDAGyBN,GAjB3BV,EAAKiB,UAAY,GACjBC,EAASC,UAAUlB,GAEnBmB,EADqBvB,EAAMwB,QAI3BD,EADqBvB,EAAMwB,M,CAsB/BC,eAAeF,EAAiBG,GAC9B,IACErB,EAAc,EACd,MAAMsB,QAAiB,EAAAhC,EAAAiC,UAASF,EAAOrB,GACvCE,EAAAU,GAASC,OAAOW,QACd,oBAAoBF,EAASG,uBAAuBJ,MAEtDvB,EAAK4B,mBAAmB,cAAc,EAAAC,EAAAC,cAAaN,EAASO,OAC5D5B,EAAS6B,UACTd,EAASe,QAAQhC,E,CACjB,MAAOiC,GACP9B,EAAAU,GAASC,OAAOoB,QAAQ,+B,EAI5BzC,EAAK0C,iBAAiB,UAAUC,IAC9BA,EAAMC,iBACN9B,EAAqBX,EAAMwB,MAAM,IA2BnC,IAAIH,EAAW,IAAIqB,sBAxBnB,SAAgBC,EAASC,GACvBD,EAAQE,SAAQpB,MAAMqB,IACpB,GAAIA,EAAMC,eAAgB,CACxB,MAAMC,EAAehD,EAAMwB,MAC3BnB,GAAe,EACf,IAAI4C,EAAgC,GAAd5C,EACtB,IACE,MAAMsB,QAAiB,EAAAhC,EAAAiC,UAASoB,EAAc3C,GAI9C,GAHAF,EAAK4B,mBAAmB,aAAa,EAAAC,EAAAC,cAAaN,EAASO,OAC3D5B,EAAS6B,UA1EjB,WACE,MAAQe,OAAQC,GAAerD,SAC5BC,cAAc,YACdqD,kBAAkBC,wBAErBC,OAAOC,SAAS,CACdC,IAAkB,EAAbL,EACLM,SAAU,U,CAoENC,GACIT,EAAkBtB,EAASG,UAAY,GAEzC,OADAc,EAAStB,UAAUlB,GACZG,EAAAU,GAASC,OAAOyC,KACrB,6D,CAGJ,MAAOtB,GACP9B,EAAAU,GAASC,OAAOoB,QAAQ,+B,QA9FlB,CACZsB,KAAM,KACNC,WAAY,QACZC,UAAW","sources":["src/js/infiniti.js"],"sourcesContent":["import { getPhoto } from './api';\nimport { createMarkup } from './markup';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport Notiflix from 'notiflix';\n\nconst form = document.querySelector('form');\nconst input = form.elements.searchQuery;\nconst list = document.querySelector('.gallery');\nconst button = document.querySelector('.submitBtn');\nconst target = document.querySelector('.js-guard');\nlet currentPage = 1;\nlet options = {\n  root: null,\n  rootMargin: '500px',\n  threshold: 1.0,\n};\n\nconst lightbox = new SimpleLightbox('.photo-card a', {\n  animationSpeed: 250,\n  captionsData: 'alt',\n});\n\nfunction smoothScrol() {\n  const { height: cardHeight } = document\n    .querySelector('.gallery')\n    .firstElementChild.getBoundingClientRect();\n\n  window.scrollBy({\n    top: cardHeight * 2,\n    behavior: 'smooth',\n  });\n}\n\nfunction arePicturesPresent(container) {\n  const pictures = container.querySelectorAll('.photo-card');\n  return pictures.length > 0;\n}\n\nfunction buildMarkupAndCheckGallery(value) {\n  if (value) {\n    list.innerHTML = '';\n    observer.unobserve(target);\n    const currentInput = input.value;\n    getGeneralMarkup(currentInput);\n  } else {\n    const currentInput = input.value;\n    getGeneralMarkup(currentInput);\n  }\n}\n\nfunction checkMarkupForSpaces(input) {\n  const picturesPresent = arePicturesPresent(list);\n  if (input === '' || input.includes(' ')) {\n    return Notiflix.Notify.warning(\n      'Please put down correct tag or eliminate spaces'\n    );\n  } else {\n    buildMarkupAndCheckGallery(picturesPresent);\n  }\n}\n\nfunction arePicturesPresent(container) {\n  const pictures = container.querySelectorAll('.photo-card');\n\n  return pictures.length > 0;\n}\n\nasync function getGeneralMarkup(input) {\n  try {\n    currentPage = 1;\n    const pictures = await getPhoto(input, currentPage);\n    Notiflix.Notify.success(\n      `Hooray! We found ${pictures.totalHits} images of ${input}!`\n    );\n    list.insertAdjacentHTML('afterbegin', createMarkup(pictures.hits));\n    lightbox.refresh();\n    observer.observe(target);\n  } catch (error) {\n    Notiflix.Notify.failure('Sorry, something went wrong!');\n  }\n}\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  checkMarkupForSpaces(input.value);\n});\n\nfunction onLoad(entries, observer) {\n  entries.forEach(async entry => {\n    if (entry.isIntersecting) {\n      const currentInput = input.value;\n      currentPage += 1;\n      let valueOfPictures = currentPage * 40;\n      try {\n        const pictures = await getPhoto(currentInput, currentPage);\n        list.insertAdjacentHTML('beforeend', createMarkup(pictures.hits));\n        lightbox.refresh();\n        smoothScrol();\n        if (valueOfPictures % pictures.totalHits < 40) {\n          observer.unobserve(target);\n          return Notiflix.Notify.info(\n            \"We're sorry, but you've reached the end of search results.\"\n          );\n        }\n      } catch (error) {\n        Notiflix.Notify.failure('Sorry, something went wrong!');\n      }\n    }\n  });\n}\n\nlet observer = new IntersectionObserver(onLoad, options);\n"],"names":["$7rYDH","parcelRequire","$d974ac970b8ca2b1$var$form","document","querySelector","$d974ac970b8ca2b1$var$input","elements","searchQuery","$d974ac970b8ca2b1$var$list","$d974ac970b8ca2b1$var$target","$d974ac970b8ca2b1$var$currentPage","$d974ac970b8ca2b1$var$lightbox","$parcel$interopDefault","$fZKcF","animationSpeed","captionsData","$d974ac970b8ca2b1$var$checkMarkupForSpaces","input1","picturesPresent","querySelectorAll","length","includes","$7Y9D8","Notify","warning","innerHTML","$d974ac970b8ca2b1$var$observer","unobserve","$d974ac970b8ca2b1$var$getGeneralMarkup","value","async","input2","pictures","getPhoto","success","totalHits","insertAdjacentHTML","$3huUq","createMarkup","hits","refresh","observe","error","failure","addEventListener","event","preventDefault","IntersectionObserver","entries","observer1","forEach","entry","isIntersecting","currentInput","valueOfPictures","height","cardHeight","firstElementChild","getBoundingClientRect","window","scrollBy","top","behavior","$d974ac970b8ca2b1$var$smoothScrol","info","root","rootMargin","threshold"],"version":3,"file":"infinity-scrol.50db1571.js.map"}