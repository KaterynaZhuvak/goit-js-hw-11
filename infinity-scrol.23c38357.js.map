{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,iEAOMC,EADOC,SAASC,cAAc,QACjBC,SAASC,YACtBC,EAAOJ,SAASC,cAAc,YAC9BI,EAASL,SAASC,cAAc,cAChCK,EAASN,SAASC,cAAc,aAClCM,EAAc,EAOlB,SAASC,IACP,IAAQC,EAAuBT,SAC5BC,cAAc,YACdS,kBAAkBC,wBAFbC,OAIRC,OAAOC,SAAS,CACdC,IAAkB,EAAbN,EACLO,SAAU,U,UAUCC,EAAiBC,G,OAAjBC,EAAgBC,MAAAC,KAAAC,U,UAAhBH,I,OAAAA,EAAfI,EAAA1B,EAAA,CAAA0B,EAAAC,GAAAC,MAAA,SAAAC,EAAgCR,G,IAEtBS,EAIFC,E,4FAJmB,EAAAC,EAAAC,UAASZ,EAAOX,G,OAAjCoB,EAAQI,EAAAC,KACdT,EAAAU,GAASC,OAAOC,QACd,oBAAoDC,OAAhCT,EAASU,UAAU,eAAmBD,OAANlB,EAAM,MAExDU,EAAgC,GAAdrB,EACtBH,EAAKkC,mBAAmB,cAAc,EAAAC,EAAAC,cAAab,EAASc,OAC5DjC,IACAkC,EAASC,QAAQrC,GACbqB,EAASU,UAAYT,GACvBL,EAAAU,GAASC,OAAOU,KAAK,iBAAoCR,OAAnBT,EAASU,UAAU,c,kDAG3Dd,EAAAU,GAASC,OAAOW,QAAQ,gC,2DAdGzB,MAAAC,KAAAC,U,CAkB/BjB,EAAOyC,iBAAiB,SAAS,SAAAC,GAC/BA,EAAMC,iBACN,IAAMC,EAAqC7C,EAzBhB8C,iBAAiB,eAE5BC,OAAS,EAwBzB,GAAoB,KAAhBpD,EAAMqD,MACR,OAAO7B,EAAAU,GAASC,OAAOmB,QAAQ,+BAG7BJ,GACF7C,EAAKkD,UAAY,GAEjBrC,EADqBlB,EAAMqD,QAI3BnC,EADqBlB,EAAMqD,M,IA8B/B,IAAIV,EAAW,IAAIa,sBAzBnB,SAAgBC,EAASC,GACR,I,EAAfD,EAAQE,S,EAAQnC,EAAA1B,EAAA,CAAA0B,EAAAC,GAAAC,MAAA,SAAAC,EAAMiC,G,IAEZC,EAEFhC,EAEID,E,sEALNgC,EAAME,eAAc,C,uBAChBD,EAAe7D,EAAMqD,MAEvBxB,EAAgC,IADpCrB,GAAe,G,mBAGU,EAAAsB,EAAAC,UAAS8B,EAAcrD,G,aAAxCoB,EAAQI,EAAAC,MACDK,UAAYT,GAAe,C,uBACtC6B,EAASK,UAAUxD,G,kBAEZiB,EAAAU,GAASC,OAAOU,KACrB,+D,QAGJxC,EAAKkC,mBAAmB,aAAa,EAAAC,EAAAC,cAAab,EAASc,OAC3DjC,I,kDAEAuD,QAAQC,UAAUC,IAAI,mBACtB1C,EAAAU,GAASC,OAAOW,QAAQ,gC,mEAlBRc,G,oCA3DV,CACZO,KAAM,KACNC,WAAY,QACZC,UAAW,IAkFI,IAAI7C,EAAA8C,GAAJ,CAAmB,gBAAiB,CACnDC,eAAgB,IAChBC,gBAAiB,SACjBC,aAAc,O","sources":["src/js/infiniti.js"],"sourcesContent":["import { getPhoto } from './api';\nimport { createMarkup } from './markup';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport Notiflix from 'notiflix';\n\nconst form = document.querySelector('form');\nconst input = form.elements.searchQuery;\nconst list = document.querySelector('.gallery');\nconst button = document.querySelector('.submitBtn');\nconst target = document.querySelector('.js-guard');\nlet currentPage = 1;\nlet options = {\n  root: null,\n  rootMargin: '500px',\n  threshold: 1.0,\n};\n\nfunction smoothScrol() {\n  const { height: cardHeight } = document\n    .querySelector('.gallery')\n    .firstElementChild.getBoundingClientRect();\n\n  window.scrollBy({\n    top: cardHeight * 2,\n    behavior: 'smooth',\n  });\n}\n\nfunction arePicturesPresent(container) {\n  const pictures = container.querySelectorAll('.photo-card');\n\n  return pictures.length > 0;\n}\n\nasync function getGeneralMarkup(input) {\n  try {\n    const pictures = await getPhoto(input, currentPage);\n    Notiflix.Notify.success(\n      `Hooray! We found ${pictures.totalHits} images of ${input}!`\n    );\n    let valueOfPictures = currentPage * 40;\n    list.insertAdjacentHTML('afterbegin', createMarkup(pictures.hits));\n    smoothScrol();\n    observer.observe(target);\n    if (pictures.totalHits < valueOfPictures) {\n      Notiflix.Notify.info(`We found only ${pictures.totalHits} pictures`);\n    }\n  } catch (error) {\n    Notiflix.Notify.failure('Sorry, something went wrong!');\n  }\n}\n\nbutton.addEventListener('click', event => {\n  event.preventDefault();\n  const picturesPresent = arePicturesPresent(list);\n  if (input.value === '') {\n    return Notiflix.Notify.warning('Please put down correct tag');\n  }\n\n  if (picturesPresent) {\n    list.innerHTML = '';\n    const currentInput = input.value;\n    getGeneralMarkup(currentInput);\n  } else {\n    const currentInput = input.value;\n    getGeneralMarkup(currentInput);\n  }\n});\n\nfunction onLoad(entries, observer) {\n  entries.forEach(async entry => {\n    if (entry.isIntersecting) {\n      const currentInput = input.value;\n      currentPage += 1;\n      let valueOfPictures = currentPage * 40;\n      try {\n        const pictures = await getPhoto(currentInput, currentPage);\n        if (pictures.totalHits < valueOfPictures) {\n          observer.unobserve(target);\n\n          return Notiflix.Notify.info(\n            \"We're sorry, but you've reached the end of search results.\"\n          );\n        }\n        list.insertAdjacentHTML('beforeend', createMarkup(pictures.hits));\n        smoothScrol();\n      } catch (error) {\n        loadBtn.classList.add('visually-hidden');\n        Notiflix.Notify.failure('Sorry, something went wrong!');\n      }\n    }\n  });\n}\n\nlet observer = new IntersectionObserver(onLoad, options);\n\nconst lightbox = new SimpleLightbox('.photo-card a', {\n  animationSpeed: 250,\n  captionPosition: 'bottom',\n  captionsData: 'alt',\n});\n"],"names":["$bpxeT","parcelRequire","$234218a4ae9f7e1a$var$input","document","querySelector","elements","searchQuery","$234218a4ae9f7e1a$var$list","$234218a4ae9f7e1a$var$button","$234218a4ae9f7e1a$var$target","$234218a4ae9f7e1a$var$currentPage","$234218a4ae9f7e1a$var$smoothScrol","cardHeight","firstElementChild","getBoundingClientRect","height","window","scrollBy","top","behavior","$234218a4ae9f7e1a$var$getGeneralMarkup","input1","$234218a4ae9f7e1a$var$_getGeneralMarkup","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","pictures","valueOfPictures","$b7ONl","getPhoto","_ctx","sent","$6JpON","Notify","success","concat","totalHits","insertAdjacentHTML","$1KhuP","createMarkup","hits","$234218a4ae9f7e1a$var$observer","observe","info","failure","addEventListener","event","preventDefault","picturesPresent","querySelectorAll","length","value","warning","innerHTML","IntersectionObserver","entries","observer1","forEach","entry","currentInput","isIntersecting","unobserve","loadBtn","classList","add","root","rootMargin","threshold","$5IjG7","animationSpeed","captionPosition","captionsData"],"version":3,"file":"infinity-scrol.23c38357.js.map"}